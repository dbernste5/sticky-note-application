{"version":3,"sources":["home.jsx","footer.jsx","header.jsx","SignUp.jsx","App.js","serviceWorker.js","index.js","stickiesLogo.jpg"],"names":["Component","SignUp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","password","firstName","lastName","email","phone","onSubmitForm","bind","assertThisInitialized","onChangeConfirmPassword","onChangeEmail","onChangeFirst","onChangeLast","onChangePhone","onChangeUserName","onChangePassword","_this2","react_default","a","createElement","id","onSubmit","type","onChange","event","setState","target","value","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","Content-Type","react","form","App","src_SignUp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.caf7529b.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n\r\n\r\nclass Home extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n        <Fragment>            \r\n            <body>This is the Body!</body>\r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Home","import React, { Component, Fragment } from 'react';\r\n\r\nclass Footer extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render()\r\n    {\r\n        return        (\r\n            <Fragment>\r\n                <footer>\r\n                    <p>&copy; 2019 Deborah Shulman, Rachel Bernstein, Hadassah Nimchinsky</p>\r\n                </footer>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Footer","import React, { Component, Fragment } from 'react';\r\nimport stickiesLogo from './stickiesLogo.jpg';\r\n\r\nclass Header extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n        <Fragment>\r\n            <header>               \r\n                <h1>This is the header!</h1>\r\n                <img src={stickiesLogo} alt=\"stickiesLogo\" ></img>\r\n            </header>            \r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Header","import React, { Component, Fragment } from 'react';\r\n\r\nclass SignUp extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phone: ''\r\n        };\r\n\r\n        this.onSubmitForm = this.onSubmitForm.bind(this);\r\n        this.onChangeConfirmPassword =this.onChangeConfirmPassword.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeFirst = this.onChangeFirst.bind(this);\r\n        this.onChangeLast = this.onChangeLast.bind(this);\r\n        this.onChangePhone = this.onChangePhone.bind(this);\r\n        this.onChangeUserName = this.onChangeUserName.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        \r\n    }\r\n\r\n    form()\r\n    {\r\n        return(\r\n        <form id=\"signUpForm\" onSubmit={this.onSubmitForm}>\r\n            <label>First Name</label><br/>\r\n            <input id=\"firstName\" type=\"text\" onChange={event => this.onChangeFirst(event)}></input><br/><br/>\r\n            <label>Last Name</label><br/>\r\n            <input id=\"lastName\" type=\"text\" onChange={event => this.onChangeLast(event)}></input><br/><br/>\r\n            <label>Email</label><br/>\r\n            <input id=\"email\" type=\"text\" onChange={event => this.onChangeEmail(event)}></input><br/><br/>\r\n            <label>Phone Number</label><br/>\r\n            <input id=\"phone\" type=\"text\" onChange={event => this.onChangePhone(event)}></input><br/><br/>\r\n            <label>Username</label><br/>\r\n            <input id=\"username\" type=\"text\" onChange={event => this.onChangeUserName(event)}></input><br/><br/>\r\n            <label>Password</label><br/>\r\n            <input id=\"password\" type=\"text\" onChange={event => this.onChangePassword(event)}></input><br/><br/>\r\n            <label>Confirm Password</label><br/>\r\n            <input id=\"confirmPassword\" type=\"text\" onChange={event => this.onChangeConfirmPassword(event)}></input><br/><br/>\r\n            <button id= \"signUpSubmit\" type=\"submit\" >Submit</button>\r\n        </form>)\r\n    }\r\n    onChangeFirst(event)\r\n    {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n    onChangeLast(event)\r\n    {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n    onChangeEmail(event)\r\n    {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    onChangePhone(event)\r\n    {\r\n        this.setState({phone: event.target.value});\r\n    }\r\n    onChangeUserName(event)\r\n    {\r\n        this.setState({username: event.target.value});\r\n    }\r\n    onChangePassword(event)\r\n    {\r\n        this.setState( {password: event.target.value});\r\n    }\r\n    onChangeConfirmPassword(event)\r\n    {\r\n       //check if password matched nad display message\r\n    }\r\n    onSubmitForm(event)\r\n    {\r\n        event.preventDefault();\r\n        console.log(\"testing console- first name: \" + this.state.firstName);\r\n        console.log(this.state.username);\r\n        console.log(this.state.firstName);\r\n        console.log(this.state.lastName);\r\n        console.log(this.state.email);\r\n        console.log(this.state.password);\r\n        console.log(this.state.phone);\r\n        console.log(\"before fetch\");\r\n        fetch(\"/user\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n        });\r\n        \r\n        console.log(\"After fetch\");\r\n        //get response\r\n        \r\n        \r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <Fragment>\r\n                {this.form()}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default SignUp","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './home';\r\nimport Footer from './footer';\r\nimport Header from './header';\r\nimport SignUp from './SignUp';\r\n\r\n\r\nclass App extends Component \r\n{\r\n\t\r\n  \trender()\r\n {\r\n    return (\r\n\r\n\t\t\t<div >\t\t\t\t\r\n\t\t\t\t\t<SignUp/>         \t\t\t\r\n      </div>\r\n    );\r\n\t}\r\n\t\r\n\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/stickiesLogo.6703d347.jpg\";"],"sourceRoot":""}