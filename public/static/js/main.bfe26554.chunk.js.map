{"version":3,"sources":["stickiesLogo.jpg","footer.jsx","header.jsx","LoginPage.jsx","SignUp.jsx","Home.jsx","Logout.jsx","addSticky.jsx","StickyView.jsx","Main.jsx","Menu.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Footer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","react","Component","Header","src","stickiesLogo","alt","LoginPage","username","password","validCredentials","loggedIn","onChangePassword","bind","assertThisInitialized","onChangeUserName","onSubmitForm","event","setState","target","value","_this2","preventDefault","fetch","method","body","JSON","stringify","headers","Content-Type","then","response","json","status","logInUser","console","log","setUserID","done","_this3","react_router","to","id","onSubmit","type","onChange","react_router_dom","SignUp","firstName","lastName","email","phone","signUpSuccess","duplicateUsername","passwordConfirmed","onChangeConfirmPassword","onChangeEmail","onChangeFirst","onChangeLast","onChangePhone","required","placeholder","form","Home","Cookies","get","Logout","addSticky","title","stickySuccess","userID","onChangeTitle","onChangeBody","rows","cols","StickyView","stickies","stickynote","fetchStickies","stickyNotes","Main","path","render","src_LoginPage","component","Menu","App","header","src_Menu","src_Main","ID","footer","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bfe26554.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stickiesLogo.6703d347.jpg\";","import React, { Component, Fragment } from 'react';\r\n\r\nclass Footer extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render()\r\n    {\r\n        return        (\r\n            <Fragment>\r\n                <footer>\r\n                    <p>&copy; 2019 Deborah Shulman, Rachel Bernstein, Hadassah Nimchinsky</p>\r\n                </footer>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Footer","import React, { Component, Fragment } from 'react';\r\nimport stickiesLogo from './stickiesLogo.jpg';\r\n\r\nclass Header extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n        <Fragment>\r\n            <header>               \r\n                <h1>This is the header!</h1>\r\n                <img src={stickiesLogo} alt=\"stickiesLogo\" ></img>\r\n            </header>            \r\n        </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Header","import React, { Component, Fragment } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nclass LoginPage extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={ username: '', password: '', validCredentials: true, loggedIn:false};\r\n\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangeUserName = this.onChangeUserName.bind(this);\r\n        this.onSubmitForm = this.onSubmitForm.bind(this);\r\n    }\r\n\r\n    onChangeUserName(event)\r\n    {\r\n        this.setState({username: event.target.value});\r\n    }\r\n    onChangePassword(event)\r\n    {\r\n        this.setState( {password: event.target.value});\r\n    }\r\n    \r\n    onSubmitForm(event)\r\n    {\r\n        event.preventDefault();\r\n        fetch(\"/login\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n        }\r\n        ).then(response=>response.json())\r\n        .then((response) => {\r\n            if(response.status===200)\r\n            {\r\n                this.setState({validCredentials: true, loggedIn:true});\r\n                this.props.logInUser();  \r\n                \r\n                console.log(\"userid: \"+response);\r\n                this.props.setUserID(response);         \r\n            }\r\n            else if (response.status === 401)\r\n            {\r\n                this.setState({validCredentials: false});\r\n            }      \r\n        }\r\n        ).done();\r\n         \r\n        \r\n    }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n        if(this.state.loggedIn) //already logged in           \r\n        {\r\n            return <Redirect to='/Home'/>;\r\n        }   \r\n        else  if(this.state.validCredentials) //didnt yet enter invalid entry....\r\n       {     return( \r\n            <Fragment>\r\n                <h2>Login</h2>\r\n                    <form id=\"LoginForm\" onSubmit={this.onSubmitForm}>\r\n                        <label>Username</label><br/>\r\n                        <input id=\"username\" type=\"text\" onChange={event => this.onChangeUserName(event)}></input><br/><br/>\r\n                        \r\n                        <label>Password</label><br/>\r\n                        <input id=\"password\" type=\"password\" onChange={event => this.onChangePassword(event)}></input><br/><br/>\r\n                        <button id= \"LoginSubmit\" type=\"submit\" >Login</button>\r\n                    </form>\r\n                    <Link to='/SignUp'>New User? Sign up</Link>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else{ //invalid credentials\r\n            return( \r\n                \r\n                <Fragment>\r\n                    <h2>Login</h2>\r\n                    <h3>Invalid Username or Password...</h3>\r\n                        <form id=\"LoginForm\" onSubmit={this.onSubmitForm}>\r\n                            <label>Username</label><br/>\r\n                            <input id=\"username\" type=\"text\" onChange={event => this.onChangeUserName(event)}></input><br/><br/>\r\n                            \r\n                            <label>Password</label><br/>\r\n                            <input id=\"password\" type=\"password\" onChange={event => this.onChangePassword(event)}></input><br/><br/>\r\n                            <button id= \"LoginSubmit\" type=\"submit\" >Login</button>\r\n                        </form>\r\n                        <Link to='/SignUp'>New User? Sign up</Link>\r\n                    </Fragment>\r\n                );\r\n        }\r\n    }\r\n        \r\n    \r\n}\r\nexport default LoginPage\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Redirect } from 'react-router';\r\n\r\nclass SignUp extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phone: '',\r\n            signUpSuccess: false,\r\n            duplicateUsername: false,\r\n            passwordConfirmed: true\r\n        };\r\n\r\n        this.onSubmitForm = this.onSubmitForm.bind(this);\r\n        this.onChangeConfirmPassword =this.onChangeConfirmPassword.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangeFirst = this.onChangeFirst.bind(this);\r\n        this.onChangeLast = this.onChangeLast.bind(this);\r\n        this.onChangePhone = this.onChangePhone.bind(this);\r\n        this.onChangeUserName = this.onChangeUserName.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        \r\n    }\r\n\r\n    form()\r\n    {\r\n        return(\r\n        <form id=\"signUpForm\" onSubmit={this.onSubmitForm}>\r\n            <label>First Name</label><br/>\r\n            <input id=\"firstName\" type=\"text\" onChange={event => this.onChangeFirst(event)} required='true'></input><br/><br/>\r\n            <label>Last Name</label><br/>\r\n            <input id=\"lastName\" type=\"text\" onChange={event => this.onChangeLast(event)} required='true'></input><br/><br/>\r\n            <label>Email</label><br/>\r\n            <input id=\"email\" type=\"email\" onChange={event => this.onChangeEmail(event)} required='true' placeholder=\"me@example.com\"></input><br/><br/>\r\n            <label>Phone Number</label><br/>\r\n            <input id=\"phone\" type=\"text\" onChange={event => this.onChangePhone(event)} required='true'></input><br/><br/>\r\n            <label>Username</label><br/>\r\n            <input id=\"username\" type=\"text\" onChange={event => this.onChangeUserName(event)} required='true'></input><br/><br/>\r\n            <label>Password</label><br/>\r\n            <input id=\"password\" type=\"password\" onChange={event => this.onChangePassword(event)} required='true'></input><br/><br/>\r\n            <label>Confirm Password</label><br/>\r\n            <input id=\"confirmPassword\" type=\"password\" onChange={event => this.onChangeConfirmPassword(event)} required='true'></input><br/><br/>\r\n            <button id= \"signUpSubmit\" type=\"submit\" >Submit</button>\r\n        </form>)\r\n    }\r\n    onChangeFirst(event)\r\n    {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n    onChangeLast(event)\r\n    {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n    onChangeEmail(event)\r\n    {\r\n        this.setState({email: event.target.value});\r\n    }\r\n    onChangePhone(event)\r\n    {\r\n        this.setState({phone: event.target.value});\r\n    }\r\n    onChangeUserName(event)\r\n    {\r\n        this.setState({username: event.target.value});\r\n    }\r\n    onChangePassword(event)\r\n    {\r\n        this.setState( {password: event.target.value});\r\n    }\r\n    onChangeConfirmPassword(event)\r\n    {\r\n       if(event.target.value !== this.state.password)  {\r\n            this.setState({passwordConfirmed: false});\r\n       }\r\n       else{\r\n            this.setState({passwordConfirmed: true});\r\n       }\r\n    }\r\n    onSubmitForm(event)\r\n    {\r\n        event.preventDefault();\r\n        \r\n        if(this.state.passwordConfirmed){\r\n            fetch(\"/user\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify(this.state),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            }).then((response) => {\r\n                if(response.status === 200)\r\n                {\r\n                    this.setState({signUpSuccess: true});\r\n                }\r\n                else if(response.status === 409) //duplicate username\r\n                {\r\n                    this.setState({duplicateUsername: true});\r\n                }\r\n                else{\r\n                    this.setState({duplicateUsername: false});\r\n                }\r\n                console.log('response: ', response.status);\r\n            \r\n            response.json()}\r\n            ).done();\r\n            \r\n            console.log(\"After fetch\");\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n    render()\r\n    {\r\n        if(this.state.signUpSuccess) //user signed up successfully, now redirect to the login page\r\n        {\r\n            return <Redirect to='/LoginPage'/>;\r\n        }\r\n        else if(this.state.duplicateUsername)\r\n        {\r\n            return(\r\n                <Fragment>\r\n                    <h2>Sign Up</h2>\r\n                    <h4>This username already exists.</h4>\r\n                    {this.form()}\r\n                </Fragment>\r\n            )\r\n\r\n        }\r\n        else if(!this.state.passwordConfirmed) {\r\n            return(\r\n                <Fragment>\r\n                    <h2>Sign Up</h2>\r\n                    {this.form()}\r\n                    <h4>Your passwords do not match.</h4>\r\n                </Fragment>\r\n            )\r\n        }\r\n        else{ //user needs to sign up\r\n            return(\r\n                <Fragment>\r\n                    <h2>Sign Up</h2>\r\n                    {this.form()}\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default SignUp\r\n\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport Cookies from 'js-cookie';\r\nimport { Redirect } from 'react-router';\r\nimport {Link }from 'react-router-dom';\r\n\r\nclass Home extends Component \r\n{\r\n\t\r\nrender()\r\n {\r\n\r\n    if(Cookies.get('sessionId')!=null)\r\n    {\r\n        return (\r\n\r\n\t\t\t<Fragment>\r\n                <h1>Home page: {Cookies.get('userName')} </h1>\r\n                <ul>\r\n                    <li><Link to='/addSticky'>Add Stickies</Link></li> \r\n                    <li><Link to='/viewStickies'>View Stickies Here</Link></li>\r\n                </ul>\r\n            </Fragment>\r\n             );\r\n            \r\n    }\r\n    else{\r\n        return <Redirect to='/LoginPage'/>;\r\n    }\r\n\t\r\n\t\r\n\t}\r\n\t\r\n\r\n}\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nclass Logout extends Component\r\n{\r\n    \r\n\r\n    render()\r\n    {   \r\n        fetch(\"/logout\", {method: \"POST\",});\r\n        return <Redirect to='/LoginPage'/>;\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default Logout\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass addSticky extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            body: '',\r\n            stickySuccess: false,\r\n            userID: this.props.userID\r\n        };\r\n\r\n        this.onSubmitForm = this.onSubmitForm.bind(this);\r\n        this.onChangeTitle =this.onChangeTitle.bind(this);\r\n        this.onChangeBody = this.onChangeBody.bind(this);  \r\n    }\r\n\r\n    form()\r\n    {\r\n        return(\r\n        <form id=\"addStickyForm\" onSubmit={this.onSubmitForm}>\r\n            <label>Title</label><br/>\r\n            <input id=\"title\" type=\"text\" onChange={event => this.onChangeTitle(event)} required='true'></input><br/><br/>\r\n            <label>Body</label><br/>\r\n            <textarea id=\"body\"  rows='15' cols='50' onChange={event => this.onChangeBody(event)} required='true'></textarea><br/><br/>\r\n            <button id= \"addStickySubmit\" type=\"submit\" >Add Sticky</button>\r\n        </form>)\r\n    }\r\n    onChangeTitle(event)\r\n    {\r\n        this.setState({title: event.target.value});\r\n    }\r\n    onChangeBody(event)\r\n    {\r\n        this.setState({body: event.target.value});\r\n    }\r\n    \r\n    onSubmitForm(event)\r\n    {\r\n        event.preventDefault();\r\n        \r\n        fetch(\"/addStickynote\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify(this.state),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n            }).then((response) => {\r\n                if(response.status===200)\r\n                {\r\n                    console.log(\"In status 200 if.\");\r\n                    this.setState({stickySuccess: true});\r\n                }\r\n                else{\r\n                    this.setState({stickySuccess: false});\r\n                }\r\n                console.log('response: ', response.status);\r\n            \r\n            response.json()}\r\n            ).done();\r\n    }\r\n        \r\n        \r\n        \r\n    \r\n    render()\r\n    {\r\n        console.log(\"stickySuccess: \"+this.state.stickySuccess)\r\n        if(this.state.stickySuccess)\r\n        {\r\n            return(\r\n                <Fragment>\r\n                    <h2>Add Sticky Note</h2>\r\n                    <h5>Sticky added successfully!</h5>\r\n                    <Link to='/viewStickies'>View Stickies Here</Link>\r\n                    {this.form()}\r\n                </Fragment>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                    <Fragment>\r\n                        <h2>Add Sticky Note</h2>\r\n                        {this.form()}\r\n                    </Fragment>\r\n                )\r\n        }\r\n    }\r\n}\r\n\r\nexport default addSticky\r\n\r\n\r\n","import React, { Component, Fragment } from 'react';\r\n\r\nclass StickyView extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = { };\r\n        this.stickies = [];\r\n\r\n        this.stickynote = this.stickynote.bind(this);\r\n        this.fetchStickies = this.fetchStickies.bind(this);\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        //set the state if we decide to\r\n    \r\n        //get the logged in user, send the user ID to the fetch method to get the stickies\r\n        //from the session\r\n\r\n        this.fetchStickies();\r\n\r\n    //put the notes we get from the DB into a sticky object so we an render them for viewing\r\n       this.stickynote(); //call this method for each row from db\r\n    }\r\n\r\n   \r\n    stickynote(title, body)\r\n    {\r\n        return(\r\n           <li>\r\n             <h2>{title}</h2>\r\n             <p>{body}</p>\r\n            </li>\r\n        )\r\n    } \r\n\r\n    fetchStickies()\r\n    {\r\n        //get the relevant stickies from the DB and map them to a list\r\n    }\r\n\r\n    render()\r\n    {\r\n        //here we render the fragment as the list elements from the mapped list.\r\n        return(\r\n            <Fragment>\r\n               <ul>\r\n                    {this.stickyNotes} \r\n               </ul>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default StickyView\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport LoginPage from './LoginPage';\r\nimport SignUp from './SignUp';\r\nimport Home from './Home';\r\nimport Logout from './Logout';\r\nimport addSticky from './addSticky';\r\nimport StickyView from './StickyView';\r\n\r\nconst Main=(props)=>(\r\n   \r\n \r\n\r\n   \r\n   <main>\r\n      <Switch>\r\n        <Route path='/LoginPage'  \r\n               render={() => <LoginPage logInUser={props.logInUser} setUserID = {props.setUserID}/>} />\r\n        <Route path='/SignUp' component={SignUp}/>\r\n        <Route path='/Home' component={Home}/>\r\n        <Route path='/Logout' component={Logout}/>\r\n        <Route path='/addSticky' component={addSticky}/>\r\n        <Route path='/viewStickies' component={StickyView}/> \r\n        \r\n\r\n      </Switch>\r\n    </main>\r\n   \r\n)\r\n  \r\n  \r\n  export default Main","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nclass Menu extends Component \r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n    }\r\n    \r\n    \r\n\t\r\nrender()\r\n {\r\n\r\n    if(this.props.loggedIn) //user is logged in\r\n    {\r\n        return(\r\n            <ul>\r\n                <li> <Link to='/Home'>Home</Link> </li>\r\n                <li> <Link to='/Logout'>Logout</Link> </li>\r\n                <li> <Link to='/SignUp'>SignUp</Link> </li>\r\n            </ul>\r\n        );\r\n    }\r\n    else{ //not logged in\r\n        return(\r\n            <ul>\r\n                <li> <Link to='/Home'>Home</Link> </li>\r\n                <li> <Link to='/LoginPage'>Login</Link> </li>\r\n                <li> <Link to='/SignUp'>SignUp</Link> </li>\r\n            </ul>\r\n        );\r\n        \r\n        }\r\n}\r\n\t\r\n\r\n}\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Footer from './footer';\r\nimport Header from './header';\r\nimport Main from './Main';\r\nimport Menu from './Menu';\r\n\r\n\r\nclass App extends Component \r\n{\r\n\tconstructor(props)\r\n\t{\r\n\t\tsuper(props);\r\n\t\tthis.state= {loggedIn:false, userID: -1}\r\n\t}\r\n\r\n\trender()\r\n {\r\n\t\r\n\treturn (\r\n\r\n\t\t\t<div >\r\n\t\t\t\t\t<Header/>\r\n\t\t\t\t\t<Menu loggedIn= {this.state.loggedIn}/>\r\n\t\t\t\t\t<Main setUserID= {(ID)=>{this.setState({userID: ID})}} logInUser={()=>{this.setState({loggedIn: true})}}/>\r\n\t\t\t\t\t<Footer/>     \t\t\t\r\n      </div>\r\n    );\r\n\t}\r\n\t\r\n\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n(\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}